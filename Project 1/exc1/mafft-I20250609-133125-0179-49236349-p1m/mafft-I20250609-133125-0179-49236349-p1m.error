inputfile = orig
10 x 241 - 174 p
nthread = 8
nthreadpair = 8
nthreadtb = 8
ppenalty_ex = 0
stacksize: 8192 kb
rescale = 1
Gap Penalty = -1.53, +0.00, -0.12



Making a distance matrix ..

There are 1 ambiguous characters.
    1 / 10 (thread    0)
done.

Constructing a UPGMA tree (treeout, efffree=0) ... 
    0 / 10
done.

Progressive alignment 1/2... 
STEP     1 / 9 (thread    0) fSTEP     2 / 9 (thread    1) fSTEP     3 / 9 (thread    2) fSTEP     4 / 9 (thread    3) fSTEP     5 / 9 (thread    4) fSTEP     6 / 9 (thread    5) fSTEP     7 / 9 (thread    6) fSTEP     8 / 9 (thread    7) fSTEP     9 / 9 (thread    0) f
done.

Making a distance matrix from msa.. 
    0 / 10 (thread    0)
done.

Constructing a UPGMA tree (treeout, efffree=1) ... 
    0 / 10
done.

Progressive alignment 2/2... 
STEP     1 / 9 (thread    0) fSTEP     6 / 9 (thread    5) fSTEP     2 / 9 (thread    1) fSTEP     3 / 9 (thread    2) fSTEP     4 / 9 (thread    3) fSTEP     5 / 9 (thread    4) fSTEP     7 / 9 (thread    6) fSTEP     8 / 9 (thread    7) fSTEP     9 / 9 (thread    0) f
done.

disttbfast (aa) Version 7.525
alg=A, model=BLOSUM62, 1.53, +0.12, -0.00, noshift, amax=0.0
8 thread(s)

distout=h
rescale = 1
    0 / 10 (thread    0)dndpre (aa) Version 7.525
alg=X, model=BLOSUM62, 1.53, +0.12, -0.00, noshift, amax=0.0
8 thread(s)

minimumweight = 0.000010
autosubalignment = 0.000000
nthread = 8
randomseed = 0
blosum 62 / kimura 200
poffset = -123
niter = 2
sueff_global = 0.100000
nadd = 2
rescale = 1

    0 / 10
Segment   1/  3    1- 151
001-0000-0 (thread    5) identical     001-0001-1 (thread    5) identical     001-0002-0 (thread    5) identical     001-0003-1 (thread    5) identical     001-0004-0 (thread    5) identical     001-0005-0 (thread    5) identical     001-0006-0 (thread    5) identical     001-0006-0 (thread    5) better     001-0007-0 (thread    5) identical     001-0008-1 (thread    3) identical     001-0009-1 (thread    5) identical     001-0010-1 (thread    3) identical     001-0010-1 (thread    3) worse      001-0011-0 (thread    1) identical     001-0012-0 (thread    8) identical     001-0013-1 (thread    4) identical     001-0014-1 (thread    6) identical     001-0015-1 (thread    2) identical     001-0016-1 (thread    7) identical     002-0000-0 (thread    2) identical     002-0000-1 (thread    7) identical     002-0002-1 (thread    8) identical     002-0003-0 (thread    3) identical     002-0004-0 (thread    2) identical     002-0005-1 (thread    7) identical     002-0006-0 (thread    8) identical     002-0007-1 (thread    3) identical     002-0008-1 (thread    7) identical     002-0009-0 (thread    2) identical     002-0010-1 (thread    3) identical     002-0011-0 (thread    7) identical     002-0012-1 (thread    2) identical     002-0013-0 (thread    3) identical     002-0014-0 (thread    8) identical     002-0015-1 (thread    7) identical     002-0016-1 (thread    2) identical     002-0016-1 (thread    2) worse      
Converged.

Reached 2
Segment   2/  3  151- 237
001-0000-0 (thread    3) identical     001-0001-1 (thread    3) identical     001-0002-0 (thread    3) identical     001-0003-1 (thread    3) identical     001-0004-0 (thread    3) identical     001-0005-1 (thread    3) identical     001-0006-0 (thread    3) identical     001-0007-1 (thread    3) identical     001-0008-0 (thread    3) identical     001-0009-1 (thread    3) identical     001-0010-1 (thread    3) identical     001-0011-1 (thread    2) identical     001-0012-1 (thread    4) identical     001-0013-0 (thread    6) identical     001-0014-0 (thread    1) identical     001-0015-1 (thread    5) identical     001-0016-0 (thread    7) identical     
Converged.
Segment   3/  3  237- 268
001-0000-1 (thread    6) identical     001-0001-1 (thread    6) identical     001-0002-0 (thread    6) identical     001-0002-0 (thread    7) identical     001-0004-1 (thread    6) identical     001-0005-0 (thread    3) identical     001-0006-0 (thread    7) identical     001-0007-1 (thread    6) identical     001-0008-0 (thread    3) identical     001-0009-0 (thread    6) identical     001-0010-1 (thread    3) identical     001-0011-1 (thread    6) identical     001-0008-1 (thread    7) identical     001-0012-1 (thread    7) better     001-0013-0 (thread    5) identical     001-0014-1 (thread    2) identical     001-0015-0 (thread    1) identical     001-0016-1 (thread    4) identical     002-0000-0 (thread    1) identical     002-0001-0 (thread    2) identical     002-0001-1 (thread    3) identical     002-0003-0 (thread    2) identical     002-0004-1 (thread    6) identical     002-0005-0 (thread    3) identical     002-0006-1 (thread    2) identical     002-0007-0 (thread    6) identical     002-0008-1 (thread    3) identical     002-0009-0 (thread    2) identical     002-0010-1 (thread    6) identical     002-0011-0 (thread    3) identical     002-0012-1 (thread    2) identical     002-0013-1 (thread    6) identical     002-0002-1 (thread    1) identical     002-0015-0 (thread    8) identical     002-0000-1 (thread    4) identical     
Converged.

Reached 2
done
dvtditr (aa) Version 7.525
alg=A, model=BLOSUM62, 1.53, +0.12, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 FFT-NS-i (Standard)
 Iterative refinement method (max. 2 iterations)

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

