inputfile = orig
10 x 241 - 174 p
outputhat23=16
treein = 0
compacttree = 0
stacksize: 8192 kb
rescale = 1
All-to-all alignment.
    0 / 10 (by thread   0) tbfast-pair (aa) Version 7.525
alg=L, model=BLOSUM62, 2.00, -0.10, +0.10, noshift, amax=0.0
8 thread(s)

outputhat23=16
Loading 'hat3.seed' ... 
done.
Writing hat3 for iterative refinement
rescale = 1
Gap Penalty = -1.80, +0.00, -0.20
tbutree = 1, compacttree = 0
Constructing a UPGMA tree ... 
    0 / 10
done.

Progressive alignment ... 
STEP     1 /9 (thread    0) STEP     2 /9 (thread    1) STEP     3 /9 (thread    2) STEP     4 /9 (thread    3) STEP     5 /9 (thread    4) STEP     6 /9 (thread    5) STEP     7 /9 (thread    6) STEP     8 /9 (thread    7) STEP     9 /9 (thread    0) 
done.
tbfast (aa) Version 7.525
alg=A, model=BLOSUM62, 1.80, +0.20, -0.00, noshift, amax=0.0
8 thread(s)

minimumweight = 0.000010
autosubalignment = 0.000000
nthread = 8
randomseed = 0
blosum 62 / kimura 200
poffset = -200
niter = 16
sueff_global = 0.100000
nadd = 16
Loading 'hat3' ... done.
rescale = 1

    0 / 10
Segment   1/  1    1- 262
001-0000-0 (thread    3) identical     001-0001-0 (thread    3) identical     001-0001-0 (thread    3) worse      001-0002-1 (thread    3) identical     001-0003-0 (thread    3) identical     001-0003-0 (thread    3) better     001-0004-1 (thread    3) identical     001-0005-0 (thread    3) identical     001-0005-0 (thread    3) worse      001-0006-1 (thread    3) identical     001-0007-0 (thread    3) identical     001-0007-0 (thread    3) worse      001-0008-1 (thread    3) identical     001-0008-1 (thread    3) worse      001-0009-1 (thread    3) identical     001-0010-0 (thread    1) identical     001-0011-1 (thread    4) identical     001-0012-1 (thread    5) identical     001-0012-1 (thread    5) worse      001-0013-1 (thread    8) identical     001-0014-0 (thread    7) identical     001-0014-0 (thread    7) worse      001-0015-0 (thread    6) identical     001-0016-1 (thread    2) identical     002-0000-1 (thread    2) identical     002-0001-1 (thread    3) identical     002-0002-0 (thread    6) identical     002-0003-0 (thread    5) identical     002-0004-0 (thread    2) identical     002-0005-1 (thread    5) identical     002-0006-1 (thread    3) identical     002-0006-1 (thread    3) worse      002-0007-0 (thread    6) identical     002-0007-0 (thread    6) worse      002-0008-1 (thread    5) identical     002-0009-0 (thread    2) identical     002-0009-0 (thread    2) worse      002-0010-0 (thread    3) identical     002-0011-1 (thread    6) identical     002-0012-0 (thread    5) identical     002-0012-0 (thread    5) worse      002-0013-1 (thread    2) identical     002-0014-0 (thread    3) identical     002-0014-0 (thread    3) worse      002-0015-1 (thread    6) identical     002-0015-1 (thread    6) worse      002-0016-1 (thread    5) identical     
Converged.
done
dvtditr (aa) Version 7.525
alg=A, model=BLOSUM62, 1.80, +0.20, -0.00, noshift, amax=0.0
8 thread(s)


Strategy:
 L-INS-i (Probably most accurate, very slow)
 Iterative refinement method (<16) with LOCAL pairwise alignment information

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

